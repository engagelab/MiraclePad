<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true" width="100%" click="handleItemClick(event)">
	<fx:Script>
		<![CDATA[
			import listeners.RetweetEvent;
			
			import mx.events.FlexEvent;
			
			import spark.events.PopUpEvent;
			
			[Bindable] private var groupColor:uint = 0xCCCCCC;
			
			/**
			 * 
			 * function to enable or not retweet and gives correct background color to the whole element
			 * 
			 * 
			 **/
			protected function initRenderer():void {
				var groupName:String = new String(data.from).toLowerCase();
				groupColor = MiraclePad.getColorBasedOnGroup(groupName);
			}
			
			/**
			 *
			 * Called when addToPortfolioMI item is clicked
			 * 
			 **/
			protected function retweetHandler(event:ContextMenuEvent):void {
				var rte:RetweetEvent = new RetweetEvent(resourceManager.getString('resources', 'RE_TWEET'), true);
				rte.originGroup = data.from;
				rte.tweetContent = cleanedContent;
				dispatchEvent(rte);
			}
			
			
			/**
			 *
			 * Remove the RT_*: from the message body
			 * 
			 **/
			protected function hideOwner(message:String):String {
				//moved here, as it was buggy with creationComplete
				initRenderer();
				
				var strongRegExp:RegExp = /RT_(.*?):/;
				cleanedContent = message.replace(strongRegExp, "");
				return cleanedContent;
			}
			
			/**
			 *
			 * Function called when item clicked
			 * 
			 **/
			protected function handleItemClick(event:MouseEvent):void {
				if(new String(data.from).toLowerCase() != new String(data.currentGroup.title).toLowerCase()) {
					var tooShortPassCallout:ReTweetCallout = new ReTweetCallout();
					tooShortPassCallout.addEventListener(PopUpEvent.CLOSE, handleCalloutClose);
					tooShortPassCallout.open(this, true);
				}
			}
			
			/**
			 *
			 * Function called when item clicked
			 * 
			 **/
			protected function handleCalloutClose(evt:PopUpEvent):void {
				if(evt.data as Boolean) {
					var rte:RetweetEvent = new RetweetEvent(resourceManager.getString('resources', 'RE_TWEET'), true);
					rte.originGroup = data.from;
					rte.tweetContent = cleanedContent;
					dispatchEvent(rte);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:String id="cleanedContent" />
		
		<fx:Component className="ReTweetCallout">
			<s:Callout horizontalPosition="before" verticalPosition="middle">
				<s:VGroup paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10" horizontalAlign="center">
					<s:Button label="Retweet?" click="close(true, true)"/>
					<s:Button label="Cancel" click="close(true, false)"/>
				</s:VGroup>
			</s:Callout>    
		</fx:Component>
	</fx:Declarations>
	
	<s:Rect left="5" right="10" top="5" bottom="5" radiusX="5" radiusY="5">
		<s:fill>
			<s:SolidColor id="itemBackground" alpha="{data.al}" color="{groupColor}" />
		</s:fill>
	</s:Rect>
	<s:VGroup top="15" right="15" bottom="15" left="10" gap="15">
		<s:Label text="{data.from+':'}" width="100%" color="#FFFFFF" />
		<s:Label text="{hideOwner(data.bdy)}" width="100%" height="100%" color="#FFFFFF" />
	</s:VGroup>
</s:ItemRenderer>
